Sergio Ramirez
Assignment 4
9.4

1. exit code displayed in octal

2.  .cpu    cortex-a53
        .fpu    neon-fp-armv8
        .syntax unified         
        .text
        .align  2
        .global f
        .type   f, %function
f:
        str     fp, [sp, -4]!   
        add     fp, sp, 0       

        mov     r0, 0           

        sub     sp, fp, 0	      
        ldr     fp, [sp], 4     
        bx      lr              

3.
@ num.s
        .cpu    cortex-a53
        .fpu    neon-fp-armv8
        .syntax unified        

        .text
        .align  2
        .global g
        .type   num, %function
num:
        str     fp, [sp, -4]!   
        add     fp, sp, 0      

        mov     r0, 123         

        sub     sp, fp, 0	     
        ldr     fp, [sp], 4     
        bx      lr              

4./* returnInts.c
 */

#include <stdio.h>
int posNum(void);
int negNum(void);
int numMax(void);

int main()
{
  int x, y, z;

  x = posNum();
  printf("positive constant: %i, ", x);

  y = negNum();
  printf("negative constant: %i, ", y);

  z = numMax();
  printf("and max number: %i.\n", z);

  return 0;
}

@ posNum.s
@ Returns +100
        .cpu    cortex-a53
        .fpu    neon-fp-armv8
        .syntax unified         

        .text
        .align  2
        .global posNum
        .type   posNum, %function
posNum:
        str     fp, [sp, -4]!   
        add     fp, sp, 0       

        mov     r0, 100        

        sub     sp, fp, 0	      
        ldr     fp, [sp], 4     
        bx      lr             

@ negNum.s

        .cpu    cortex-a53
        .fpu    neon-fp-armv8
        .syntax unified         

        .text
        .align  2
        .global negNum
        .type   negNum, %function
negNum:
        str     fp, [sp, -4]!   
        add     fp, sp, 0       
        mov     r0, -100        
        sub     sp, fp, 0	      
        ldr     fp, [sp], 4    
        bx      lr              

@ numMax.s

        .cpu    cortex-a53
        .fpu    neon-fp-armv8
        .syntax unified         
        .text
        .align  2
        .global numMax
        .type   numMax%function
numMax:
        str     fp, [sp, -4]!   
        add     fp, sp, 0       

        mov     r0, 0xff       

        sub     sp, fp, 0	      
        ldr     fp, [sp], 4     
        bx      lr              

5.
/*
 * checkRetChars.c
 * calls three assembly language functions and
 * prints their return characters.
 *
 * 2017-09-29: Bob Plantz
 */

#include <stdio.h>
int retA(void);
int retZ(void);
int retHash(void);

int main()
{
    char aChar, bChar, cChar;

    aChar = retA();
    printf("returning chars: %c, ", aChar);

    bChar = retZ();
    printf("%c, ", bChar);

    cChar = retHash();
    printf("and %c.\n", cChar);

    return 0;
}

@ retA.s

        .cpu    cortex-a53
        .fpu    neon-fp-armv8
        .syntax unified        
        .text
        .align  2
        .global A
        .type   retA, %function
retA:
        str     fp, [sp, -4]!   
        add     fp, sp, 0       

        mov     r0, 'A          
        sub     sp, fp, 0	      
        ldr     fp, [sp], 4     
        bx      lr             

@ z.s
        .cpu    cortex-a53
        .fpu    neon-fp-armv8
        .syntax unified         
        .text
        .align  2
        .global z
        .type   retZ, %function
retZ:
        str     fp, [sp, -4]!   
        add     fp, sp, 0       

        mov     r0, 'z          

        sub     sp, fp, 0	      
        ldr     fp, [sp], 4    
        bx      lr              

@ retHash.s

        .cpu    cortex-a53
        .fpu    neon-fp-armv8
        .syntax unified         

        .text
        .align  2
        .global hashtag
        .type   retHash, %function
retHash:
        str     fp, [sp, -4]!   
        add     fp, sp, 0       

        mov     r0, #'#         

        sub     sp, fp, 0	     
        ldr     fp, [sp], 4     
        bx      lr              

